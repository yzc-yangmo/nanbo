

/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Course {

	private int courseID;
	private char courseName;
	private string courseType;
	public Session question;
	public StudentsList studentsList;
	public TaskList taskList;
	public Teacher teacher;
	public TeachingResource teachingResource;
	public TestList testList;
	public TestList m_TestList;
	public TeachingResource m_TeachingResource;
	public Session m_Session;
	public TaskList m_TaskList;
	public StudentsList m_StudentsList;

	public Course(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param studentID
	 */
	public Student viewStudent(string studentID){
		return null;
	}

	public int getcourseID(){
		return courseID;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setcourseID(int newVal){
		courseID = newVal;
	}

	public char getcourseName(){
		return courseName;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setcourseName(char newVal){
		courseName = newVal;
	}
}//end Course


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Item {

	private string content;
	private int itemID;
	private int fullScore;
	private string type;

	public Item(){

	}

	public void finalize() throws Throwable {

	}
	public string getcontent(){
		return content;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setcontent(string newVal){
		content = newVal;
	}

	public int getscore(){
		return score;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setscore(int newVal){
		score = newVal;
	}

	public string gettype(){
		return type;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settype(string newVal){
		type = newVal;
	}

	public int getitemID(){
		return itemID;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setitemID(int newVal){
		itemID = newVal;
	}
}//end Item


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Message {

	private string content;
	private string time;
	private User sender;
	public User m_User;

	public Message(){

	}

	public void finalize() throws Throwable {

	}
	public string getcontent(){
		return content;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setcontent(string newVal){
		content = newVal;
	}

	public string gettime(){
		return time;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settime(string newVal){
		time = newVal;
	}

	public User getsender(){
		return sender;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setsender(User newVal){
		sender = newVal;
	}

	public boolean send(){
		return false;
	}
}//end Message

/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Message {

	public Message(){

	}

	public void finalize() throws Throwable {

	}
}//end Message


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Session {

	private Student student;
	private message[] messageList;
	public Message m_Message;

	public Session(){

	}

	public void finalize() throws Throwable {

	}
	public Student getstudent(){
		return student;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setstudent(Student newVal){
		student = newVal;
	}

	public message[] getmessageList(){
		return messageList;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setmessageList(message[] newVal){
		messageList = newVal;
	}
}//end Session


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class Student extends User {

	private int ID;
	private string name;
	private string password;
	private string userName;
	public TaskForStudent m_TaskForStudent;
	public TestForStudent m_TestForStudent;

	public Student(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public float calculateGPA(){
		return null;
	}

	public int getID(){
		return ID;
	}

	public string getname(){
		return name;
	}

	public string getpassword(){
		return password;
	}

	public string getpassWord(){
		return passWord;
	}

	public string getuserName(){
		return userName;
	}

	/**
	 * 
	 * @param userName
	 * @param password
	 */
	public boolean login(string userName, string password){
		return false;
	}

	/**
	 * 
	 * @param userName
	 * @param passwoed
	 */
	public boolean logOff(string userName, string passwoed){
		return false;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setID(int newVal){
		ID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setname(string newVal){
		name = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setpassword(string newVal){
		password = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setpassWord(string newVal){
		passWord = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setuserName(string newVal){
		userName = newVal;
	}
}//end Student


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:42
 */
public class StudentsList {

	private student[] list;
	public Student m_Student;

	public StudentsList(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param student
	 */
	public boolean add(Student student){
		return false;
	}

	/**
	 * 
	 * @param studentID
	 */
	public boolean delete(string studentID){
		return false;
	}

	public student[] getlist(){
		return list;
	}

	/**
	 * 
	 * @param studentID
	 */
	public Student view(string studentID){
		return null;
	}
}//end StudentsList


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class Task {

	private int taskID;
	private string testName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private Item[] taskContent;
	public Item m_Item;

	public Task(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param item
	 */
	public boolean addItem(Item item){
		return false;
	}

	/**
	 * 
	 * @param itemID
	 */
	public boolean deleteItem(int itemID){
		return false;
	}

	/**
	 * 
	 * @param taskContent
	 */
	public boolean upload(Item[] taskContent){
		return false;
	}

	public int gettaskID(){
		return taskID;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settaskID(int newVal){
		taskID = newVal;
	}

	public string gettestName(){
		return testName;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestName(string newVal){
		testName = newVal;
	}

	public int getfullScore(){
		return fullScore;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setfullScore(int newVal){
		fullScore = newVal;
	}

	public string getstartTime(){
		return startTime;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setstartTime(string newVal){
		startTime = newVal;
	}

	public string getdeadline(){
		return deadline;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setdeadline(string newVal){
		deadline = newVal;
	}

	public Item[] gettaskContent(){
		return taskContent;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settaskContent(Item[] newVal){
		taskContent = newVal;
	}
}//end Task


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TaskForStudent extends Task {

	private int taskID;
	private string taskName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private items: Item[] contendAnswered;

	public TaskForStudent(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public int gettaskID(){
		return taskID;
	}

	public string gettaskName(){
		return taskName;
	}

	public int getfullScore(){
		return fullScore;
	}

	public string getstartTime(){
		return startTime;
	}

	public string getdeadline(){
		return deadline;
	}

	public items: Item[] getcontendAnswered(){
		return contendAnswered;
	}

	/**
	 * 
	 * @param student
	 */
	public void studentAnswer(Student student){

	}

	/**
	 * 
	 * @param teacher
	 */
	public void teacherMark(Teacher teacher){

	}
}//end TaskForStudent

/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TaskForStudent {

	public TaskForStudent(){

	}

	public void finalize() throws Throwable {

	}
}//end TaskForStudent


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TaskForTeacher extends Task {

	private int taskID;
	private string taskName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private int taskContent;
	public Teacher m_Teacher;

	public TaskForTeacher(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public int gettaskID(){
		return taskID;
	}

	public string gettaskName(){
		return taskName;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settaskName(string newVal){
		taskName = newVal;
	}

	public int getfullScore(){
		return fullScore;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setfullScore(int newVal){
		fullScore = newVal;
	}

	public string getstartTime(){
		return startTime;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setstartTime(string newVal){
		startTime = newVal;
	}

	public string getdeadline(){
		return deadline;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setdeadline(string newVal){
		deadline = newVal;
	}

	public int gettaskContent(){
		return taskContent;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settaskContent(int newVal){
		taskContent = newVal;
	}

	public boolean releaseTask(){
		return false;
	}

	/**
	 * 
	 * @param item
	 */
	public boolean addItem(Item item){
		return false;
	}

	/**
	 * 
	 * @param itemID
	 */
	public boolean deleteItem(int itemID){
		return false;
	}

	/**
	 * 
	 * @param items
	 */
	public boolean upload(Item[] items){
		return false;
	}
}//end TaskForTeacher

/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TaskForTeacher {

	public TaskForTeacher(){

	}

	public void finalize() throws Throwable {

	}
}//end TaskForTeacher


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TaskList {

	private Test[] taskList;
	public Task m_Task;

	public TaskList(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param task
	 */
	public boolean addTask(Task task){
		return false;
	}

	/**
	 * 
	 * @param taskID
	 */
	public boolean deletTask(int taskID){
		return false;
	}

	public Test[] gettaskList(){
		return taskList;
	}
}//end TaskList


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class Teacher extends User {

	private int ID;
	private string name;
	private string password;
	private string userName;

	public Teacher(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public int getID(){
		return ID;
	}

	public string getname(){
		return name;
	}

	public string getpassword(){
		return password;
	}

	public int getteacherID(){
		return teacherID;
	}

	public string getuserName(){
		return userName;
	}

	/**
	 * 
	 * @param userName
	 * @param password
	 */
	public boolean login(string userName, string password){
		return false;
	}

	/**
	 * 
	 * @param userName
	 * @param password
	 */
	public boolean logOff(string userName, string password){
		return false;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setID(int newVal){
		ID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setname(string newVal){
		name = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setpassword(string newVal){
		password = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setteacherID(int newVal){
		teacherID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setuserName(string newVal){
		userName = newVal;
	}
}//end Teacher


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TeachingResource {

	private string content;
	private string type;

	public TeachingResource(){

	}

	public void finalize() throws Throwable {

	}
	public string gettype(){
		return type;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settype(string newVal){
		type = newVal;
	}

	public string getcontent(){
		return content;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setcontent(string newVal){
		content = newVal;
	}
}//end TeachingResource


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class Test {

	private int testID;
	private string testName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private Item[] testContent;
	public Item m_Item;

	public Test(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param item
	 */
	public boolean addItem(Item item){
		return false;
	}

	/**
	 * 
	 * @param itemID
	 */
	public boolean deleteItem(int itemID){
		return false;
	}

	public string getdeadline(){
		return deadline;
	}

	public string getstartTime(){
		return startDate;
	}

	public item[] gettestContent(){
		return testContent;
	}

	public int gettestID(){
		return testID;
	}

	public string gettestName(){
		return testName;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setdeadline(string newVal){
		deadline = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setstartTime(string newVal){
		startDate = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestContent(item[] newVal){
		testContent = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestID(int newVal){
		testID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestName(string newVal){
		testName = newVal;
	}

	/**
	 * 
	 * @param testContent
	 */
	public boolean upload(item[] testContent){
		return false;
	}

	public int getscore(){
		return score;
	}
}//end Test


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TestForStudent extends Test {

	private int testID;
	private string testName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private item[] contentAnswered;

	public TestForStudent(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public int gettestID(){
		return testID;
	}

	public string gettestName(){
		return testName;
	}

	public int getfullScore(){
		return fullScore;
	}

	public string getstarTIme(){
		return startDate;
	}

	public string getdeadline(){
		return deadline;
	}

	/**
	 * 
	 * @param student
	 */
	public void studentAnswer(Student student){

	}

	/**
	 * 
	 * @param techer
	 */
	public void teacherMark(Teacher techer){

	}

	public item[] getcontentAnswered(){
		return contentAnswered;
	}
}//end TestForStudent


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TestForTeacher extends Test {

	private int testID;
	private string testName;
	private int fullScore;
	private string startTime;
	private string deadline;
	private item[] testContent;
	public Teacher m_Teacher;

	public TestForTeacher(){

	}

	public void finalize() throws Throwable {
		super.finalize();
	}
	public boolean releseTest()(){
		return false;
	}

	/**
	 * 
	 * @param item
	 */
	public boolean addItem(Item item){
		return false;
	}

	/**
	 * 
	 * @param itemID
	 */
	public boolean deleteItem(int itemID){
		return false;
	}

	public string getdeadline(){
		return deadline;
	}

	public string getstartTime(){
		return startDate;
	}

	public item[] gettestContent(){
		return testContent;
	}

	public int gettestID(){
		return testID;
	}

	public string gettestName(){
		return testName;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setdeadline(string newVal){
		deadline = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setstartTime(string newVal){
		startDate = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestContent(item[] newVal){
		testContent = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestID(int newVal){
		testID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void settestName(string newVal){
		testName = newVal;
	}

	/**
	 * 
	 * @param testContent
	 */
	public boolean upload(item[] testContent){
		return false;
	}

	public int getfullScore(){
		return fullScore;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setfullScore(int newVal){
		fullScore = newVal;
	}
}//end TestForTeacher


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public class TestList {

	private Test[] testList;
	public Test m_Test;

	public TestList(){

	}

	public void finalize() throws Throwable {

	}
	/**
	 * 
	 * @param test
	 */
	public boolean addTest(Test test){
		return false;
	}

	/**
	 * 
	 * @param testID
	 */
	public boolean deleteTest(int testID){
		return false;
	}

	public test[] gettestList(){
		return testList;
	}
}//end TestList


/**
 * @author 24035
 * @version 1.0
 * @created 07-10月-2023 22:46:43
 */
public abstract class User extends Class2 {

	private int ID;
	private string name;
	private string password;
	private string userName;

	public User(){

	}

	public void finalize() throws Throwable {

	}
	public int getID(){
		return ID;
	}

	public string getname(){
		return name;
	}

	public string getpassword(){
		return password;
	}

	public string getuserName(){
		return userName;
	}

	/**
	 * 
	 * @param userName
	 * @param password
	 */
	public boolean login(string userName, string password){
		return false;
	}

	/**
	 * 
	 * @param userName
	 * @param password
	 */
	public boolean logOff(string userName, string password){
		return false;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setID(int newVal){
		ID = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setname(string newVal){
		name = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setpassword(string newVal){
		password = newVal;
	}

	/**
	 * 
	 * @param newVal
	 */
	public void setuserName(string newVal){
		userName = newVal;
	}
}//end User
